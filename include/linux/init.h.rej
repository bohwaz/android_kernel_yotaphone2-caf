--- include/linux/init.h	2016-11-28 15:55:48.852517327 +0200
+++ ../steadykernel/include/linux/init.h	2016-11-02 22:10:32.719953972 +0200
@@ -47,6 +47,8 @@
 #define __exitdata	__section(.exit.data)
 #define __exit_call	__used __section(.exitcall.exit)
 
+
+
 /*
  * modpost check for section mismatches during the kernel build.
  * A section mismatch happens when there are references from a
@@ -223,6 +225,10 @@
 	static initcall_t __initcall_##fn \
 	__used __section(.security_initcall.init) = fn
 
+#define deferred_initcall(level, fn, id) \
+	static initcall_t __initcall_##fn##id __used \
+	__attribute__((__section__(".deferred_initcall" level ".init"))) = fn
+
 struct obs_kernel_param {
 	const char *str;
 	int (*setup_func)(char *);
@@ -266,6 +272,10 @@
  */
 #define module_init(x)	__initcall(x);
 
+#define deferred_module_init_0(fn)	deferred_initcall("0", fn, 0)
+#define deferred_module_init_1(fn)	deferred_initcall("1", fn, 1)
+#define deferred_module_init(fn)	deferred_initcall("1", fn, 1)
+
 /**
  * module_exit() - driver exit entry point
  * @x: function to be run when driver is removed
@@ -280,6 +290,10 @@
 
 #else /* MODULE */
 
+#define deferred_module_init_0(fn)	module_init(fn)
+#define deferred_module_init_1(fn)	module_init(fn)
+#define deferred_module_init(fn)	module_init(fn)
+
 /* Don't use these in modules, but some people do... */
 #define early_initcall(fn)		module_init(fn)
 #define core_initcall(fn)		module_init(fn)
